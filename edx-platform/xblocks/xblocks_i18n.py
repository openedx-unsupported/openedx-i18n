"""
Push and pull the latest sources of XBlocks to Transifex in batch.
"""
from __future__ import print_function

from json import load
from subprocess import CalledProcessError, STDOUT, check_call
from os import getenv, path, walk
from os.path import join, relpath
import time

XBLOCKS_DIR = path.dirname(__file__)


def print_prob_files(root):
    for parent, dirs, files in walk(root):
        for f in files:
            if f.endswith('.prob'):
                file_path = relpath(join(parent, f), root)
                with open(file_path) as file_obj:
                    print('=====', file_path, '=====')
                    print(file_obj.read())


def execute(cmd, **kwargs):
    check_call(cmd, stderr=STDOUT, **kwargs)


def xblock_configs():
    with open(path.join(XBLOCKS_DIR, 'config.json'), 'r') as config_file:
        config = load(config_file)

    for xblock in config['xblocks']:
        yield xblock


def pull_translations():
    for config in xblock_configs():
        only = getenv('XBLOCK_NAME')
        if only and only != config['name']:
            continue

        repos_dir = path.join(XBLOCKS_DIR, 'repos')
        repo_dir = path.join(repos_dir, config['name'])

        branch = 'i18n-bot/{time}'.format(time=time.strftime('%Y-%m-%d-%H%M%S'))
        execute(['git', 'clone', config['upstream_repo'], config['name']], cwd=repos_dir)
        # execute(['git', 'clone', config['upstream_repo'], config['name']], cwd=repos_dir)
        execute(['git', 'remote', 'add', 'local', config['local_repo']], cwd=repo_dir)
        execute(['git', 'checkout', '-b', branch, 'master'], cwd=repo_dir)
        execute(config['requirements_script'], shell=True, cwd=repo_dir)

        try:
            execute(config['pull_script'], shell=True, cwd=repo_dir)
        except CalledProcessError as e:
            print('Errors in pulling "{xblock}" resources from Transifex'.format(xblock=config['name']))
            print_prob_files(repo_dir)
            raise

        execute(['git', 'config', 'user.name', 'Omar Al-Ithawi'], cwd=repo_dir)
        execute(['git', 'config', 'user.email', 'i@omardo.com'], cwd=repo_dir)
        execute("git add $(find . -name '*.po' -or -name '*.mo' -or -name '*.js')", shell=True, cwd=repo_dir)
        execute(['git', 'commit', '-m', 'Update translations (autogenerated message)'], cwd=repo_dir)


if __name__ == '__main__':
    pull_translations()
